{"version":3,"sources":["components/propTypes/GoodListPropTypes.js","components/AppButton/AppButton.js","components/AppButtons/AppButtons.js","components/propTypes/AppButtonsPropTypes.js","components/GoodsList/GoodsList.js","components/PageContent/PageContent.js","components/StartButton/StartButton.js","App.js","index.js"],"names":["PropTypes","shape","arrayOf","objectOf","name","string","isRequired","id","number","AppButton","onClickFunc","title","Button","className","type","onClick","AppButtons","reverseList","func","reset","sortByAlph","sortByLength","GoodsList","goods","ListGroup","map","good","Item","key","PageContent","state","props","preparedGoods","setState","reverse","sort","a","b","localeCompare","length","this","React","Component","StartButton","toggleVisible","index","App","contentVisible","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79d39ff1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const GoodListPropTypes = (\n  PropTypes.shape(PropTypes.arrayOf(PropTypes.objectOf({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }))).isRequired\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport const AppButton = ({ onClickFunc, title }) => (\n  <Button\n    className=\"m-1\"\n    type=\"button\"\n    onClick={onClickFunc}\n  >\n    {title}\n  </Button>\n);\n\nAppButton.propTypes = {\n  onClickFunc: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { AppButton } from '../AppButton';\nimport { AppButtonsPropTypes } from '../propTypes/AppButtonsPropTypes';\n\nexport const AppButtons = ({\n  reverseList,\n  sortByAlph,\n  sortByLength,\n  reset,\n}) => (\n  <div>\n    <AppButton onClickFunc={reverseList} title=\"Reverse\" />\n    <AppButton onClickFunc={sortByAlph} title=\"Sort Alphabetically\" />\n    <AppButton onClickFunc={reset} title=\"Reset\" />\n    <AppButton onClickFunc={sortByLength} title=\"Sort by length\" />\n  </div>\n);\n\nAppButtons.propTypes = AppButtonsPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const AppButtonsPropTypes = PropTypes.shape({\n  reverseList: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  sortByAlph: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { GoodListPropTypes } from '../propTypes/GoodListPropTypes';\n\nexport const GoodsList = ({ goods, reverseList }) => (\n  <>\n    <h1>Goods list</h1>\n    <ListGroup>\n      {goods.map(good => (\n        <ListGroup.Item key={good.id}>\n          {good.name}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  </>\n);\n\nGoodsList.propTypes = GoodListPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodListPropTypes } from '../propTypes/GoodListPropTypes';\nimport { AppButtons } from '../AppButtons';\nimport { GoodsList } from '../GoodsList';\nimport { AppButtonsPropTypes } from '../propTypes/AppButtonsPropTypes';\n\nexport class PageContent extends React.Component {\n  state = {\n    goods: this.props.preparedGoods,\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.name.localeCompare(b.name)),\n    }));\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      goods: this.props.preparedGoods,\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.name.length - b.name.length),\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <AppButtons\n          reverseList={this.reverseList}\n          sortByAlph={this.sortByAlph}\n          sortByLength={this.sortByLength}\n          reset={this.reset}\n        />\n        <GoodsList goods={this.state.goods} />\n      </>\n    );\n  }\n}\n\nPageContent.propTypes = PropTypes.shape({\n  goods: PropTypes.shape(GoodListPropTypes).isRequired,\n  AppButtonsPropTypes,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport const StartButton = ({ toggleVisible }) => (\n  <Button\n    type=\"button\"\n    onClick={toggleVisible}\n  >\n    Start\n  </Button>\n);\n\nStartButton.propTypes = {\n  toggleVisible: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { PageContent } from './components/PageContent/PageContent';\nimport { StartButton } from './components/StartButton/StartButton';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((good, index) => ({\n  name: good,\n  id: index,\n}));\n\nclass App extends React.Component {\n  state = {\n    contentVisible: false,\n  }\n\n  toggleVisible = () => {\n    this.setState(state => ({\n      contentVisible: !state.contentVisible,\n    }));\n  };\n\n  render() {\n    const { contentVisible } = this.state;\n\n    return (\n      <Container className=\"pt-5\">\n        {!contentVisible ? (\n          <StartButton toggleVisible={this.toggleVisible} />\n        )\n          : (\n            <PageContent\n              preparedGoods={preparedGoods}\n              reverseList={this.reverseList}\n              sortByAlph={this.sortByAlph}\n              reset={this.reset}\n              sortByLength={this.sortByLength}\n            />\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}